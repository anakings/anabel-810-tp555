import numpy as np

M = 1000
x1 = np.random.uniform(size=M)
x2 = np.random.uniform(size=M)
w = np.random.uniform(size=M)
y = 2*x1 + 2*x2 + w

alpha = 0.01
mini_batch_lenght = 50
iterations = 200
X_b = np.c_[np.ones((M, 1)), x1] # onde X é a matriz dos valores de entrada
# 'y' é a matriz dos valores de saída
a = np.random.randn(2,1)

for iteration in range(iterations):
    matrix=np.ones(shape=(mini_batch_lenght,2))
    matriy=np.ones(shape=(mini_batch_lenght,1))
    for i in range(mini_batch_lenght):
        random_index = np.random.randint(M) 
        xi = X_b[random_index:random_index+1]
        matrix[i] = xi
        yi = y[random_index:random_index+1]
        matriy[i] = yi
    for epoch in range(mini_batch_lenght):
        gradients = -2/mini_batch_lenght * matrix.T.dot(matriy - matrix.dot(a))
        a = a - alpha * gradients
        
h = a[0][0]*x1 + a[1][0]*x2
erro = (y - h)**2

sum = 0
for i in range(M):
    sum = sum + erro[i]   
print('O erro promedio é: ' + str(sum/M))
